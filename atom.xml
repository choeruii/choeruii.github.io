<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>赵宇盛的博客</title>
  
  <subtitle>算幾番照我</subtitle>
  <link href="https://choeruii.github.io/atom.xml" rel="self"/>
  
  <link href="https://choeruii.github.io/"/>
  <updated>2021-01-25T09:31:14.678Z</updated>
  <id>https://choeruii.github.io/</id>
  
  <author>
    <name>Eason Zhao</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>什么是元胞自动机</title>
    <link href="https://choeruii.github.io/2020/10/18/%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    <id>https://choeruii.github.io/2020/10/18/%E4%BB%80%E4%B9%88%E6%98%AF%E8%87%AA%E5%8A%A8%E6%9C%BA/</id>
    <published>2020-10-18T14:34:08.961Z</published>
    <updated>2021-01-25T09:31:14.678Z</updated>
    
    <content type="html"><![CDATA[<p>​        <strong>元胞自动机</strong>(<code>Cellular Automata</code>，简称CA，也有人译为细胞自动机、点格自动机、分子自动机或单元自动机)。是一时间和空间都离散的动力系统。散布在规则格网<code>(Lattice Grid)</code>中的每一元胞(Cell)取有限的离散状态，遵循同样的作用规则，依据确定的局部规则作同步更新。大量元胞通过简单的相互作用而构成动态系统的演化。不同于一般的动力学模型，元胞自动机不是由严格定义的物理方程或函数确定，而是用一系列模型构造的规则构成。凡是满足这些规则的模型都可以算作是元胞自动机模型。因此，元胞自动机是一类模型的总称，或者说是一个方法框架。其特点是时间、空间、状态都离散，每个变量只取有限多个状态，且其状态改变的规则在时间和空间上都是局部的。</p><p><strong>1. 自动机</strong></p><p>  自动机(Automaton)通常指不需要人们逐步进行操作指导的设备(夏培肃，1984)。例如，全自动洗衣机可按照预先安排好的操作步骤作自动地运行;现代计算机能自动地响应人工编制的各种编码指令。完成各种复杂的分析与计算;机器人则将自动控制系统和人工智能结合，实现类人的一系列活动。另一方面，自动机也可被看作为一种离散数字动态系统的数学模型。例如，英国数学家<code>A.M.Turing</code>于1936年提出的图灵机就是一个描述计算过程的数学模型<code>(A.M.Turing,1936)</code>。它是由一个有限控制器、一条无限长存储带和一个读写头构成的抽象的机器，并可执行如下操作:</p><ul><li>读写头在存储带上向左移动一格;</li><li>读写头在存储带上向右移动一格;</li><li>在存储的某一格内写下或清除一符号;</li><li>条件转移。</li></ul><p>​        图灵机在理论上能模拟现代数字计算机的一切运算，可视为现代数字计算机的数学模型。实际上，一切”可计算”函数都等价于图灵机可计算函数，而图灵机可计算函数类又等价于一般递归函数类。<br>      根据存储带是否有限，可将自动机划分为有限带自动机<code>(Finite Automaton)</code>和无限带自动机<code>(Infinite Automaton)</code>。由于图灵机有无限长的存储带，所以为一种无限带自动机。有限带自动机常用作数字电路的数学模型，也用来描述神经系统和算法;而无限带自动机主要用来描述算法，也用来描述繁殖过程 (如细胞型自动机和网络型自动机)。<br>有限自动机是一种控制状态有限、符号集有限的自动机，是一种离散输入输出系统的数学模型。可将有限自动机设想成由一条划分为许多方格的输入带和一个控制器组成的机器:在输入带的每一个小格中可以容纳一个符号，这些符号取自一个有限符号集S-控制器具有有限个可能状态(构成集合Q)。并在每一时刻仅处于其中的一个状态q;控制器有一个读入头，可以从输入带中读入符号;时间是离散的，初始时控制器处在状态;控制器的功能是根据其当前状态g和读入头从输入带上得到的符号a,来确定控制器的下一时刻的状态实现从状态q到状态q’，实现从状态q到状态q’的转移，并将读入头右移一格。控制器另一功能是识别终止状态(它们构成Q的一个子集F)，也可将该识别功能视为有限自动机的输出。<br>​        从数学上来定义，有限自动机是一个五元组:</p><script type="math/tex; mode=display">FA=(Q,S,\delta,q_0,F)</script><p>​        其中，$Q$是控制器的有限状态集、$S$是输入符号约有限集、$\delta$是控制状态转移规律的$Q×S$到$Q$的映射 (可用状态转移图或状态转移表表示)，$q_0$是初始状态、$F$是终止状态集。</p><p>​        若$\delta$是单值映射，则称$M$为确定性有限自动机;若$\delta$是多值映射，则称$M$为非确定性有限自动机。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;​        &lt;strong&gt;元胞自动机&lt;/strong&gt;(&lt;code&gt;Cellular Automata&lt;/code&gt;，简称CA，也有人译为细胞自动机、点格自动机、分子自动机或单元自动机)。是一时间和空间都离散的动力系统。散布在规则格网&lt;code&gt;(Lattice G</summary>
      
    
    
    
    
    <category term="元胞自动机" scheme="https://choeruii.github.io/tags/%E5%85%83%E8%83%9E%E8%87%AA%E5%8A%A8%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>回归方法</title>
    <link href="https://choeruii.github.io/2020/10/10/%E5%9B%9E%E5%BD%92%E6%96%B9%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://choeruii.github.io/2020/10/10/%E5%9B%9E%E5%BD%92%E6%96%B9%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2020-10-10T15:06:01.755Z</published>
    <updated>2021-01-25T09:34:52.823Z</updated>
    
    <content type="html"><![CDATA[<h2 id="线性回归模型"><a href="#线性回归模型" class="headerlink" title="线性回归模型"></a>线性回归模型</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>线性回归——即对一组二元（单值）关系集的线性拟合，以寻找二元关系的函数表达。</p><p>简单线性回归模型如下：</p><script type="math/tex; mode=display">y = wx+b</script><p>其中$x$表示特征值，$w$表示权重，$b$表示偏置，$y$表示标签。</p><p><strong><em>多元线性回归</em></strong></p><p>对于一组$n$元关系（也可以认为是二元）的线性拟合。譬如：对于二元关系$(y,(x_1,x_2,…,x_n))$可以建立多元线性回归模型如下：</p><script type="math/tex; mode=display">y = b + w_1x_1+w_2x_2+...+w_nx_n</script><p>其中$x_i$表示第$i$个特征值，$w_i$表示第$i$个特征对应的权重，$b$表示偏置，$y$表示标签。</p><p>对线性回归模型，假设训练集中 m 个训练样本，每个训练样本中有 n 个特征，可以采用矩阵的表示方法，则多元线性回归模型还可以表示为：</p><script type="math/tex; mode=display">Y = \theta X</script><p>其中$\theta = (\theta_0,\theta_1,\theta_2,…,\theta_n)$。</p><p>其损失函数可表示为：</p><script type="math/tex; mode=display">𝐽(𝜃)=(𝑌−𝑌̂ )^2=(𝑌−𝜃𝑋)^=(𝑌−𝜃𝑋)𝑇(𝑌−𝜃𝑋)</script><p>其中，标签 𝑌 为 (m,1) 的矩阵，训练特征 𝑋 为 (m,n+1) 的矩阵(<strong>列数为n+1，是因为需要添加一列 $𝑥_0$， 并且这一列的值都为 1</strong>)，回归系数 𝜃 为 (n+1,1) 的矩阵，对 𝜃 求导，并令其导数等于 0 ，可以得到$X^T(Y−𝜃X)=0$。所以，最优解为：</p><script type="math/tex; mode=display">𝜃=(X^TX)^{-1}X^TY</script><p>这个就是正规方程解，我们可以通过最优方程解，直接求得我们所需要的参数 $𝜃$。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;线性回归模型&quot;&gt;&lt;a href=&quot;#线性回归模型&quot; class=&quot;headerlink&quot; title=&quot;线性回归模型&quot;&gt;&lt;/a&gt;线性回归模型&lt;/h2&gt;&lt;h3 id=&quot;原理&quot;&gt;&lt;a href=&quot;#原理&quot; class=&quot;headerlink&quot; title=&quot;原理&quot;&gt;&lt;</summary>
      
    
    
    
    
    <category term="拒绝废物指南" scheme="https://choeruii.github.io/tags/%E6%8B%92%E7%BB%9D%E5%BA%9F%E7%89%A9%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>深度学习小白白入门乱记</title>
    <link href="https://choeruii.github.io/2020/10/09/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://choeruii.github.io/2020/10/09/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
    <published>2020-10-09T15:00:24.148Z</published>
    <updated>2020-10-10T15:04:46.865Z</updated>
    
    <content type="html"><![CDATA[<p>机器学习主要分为三类：监督学习、非监督学习、强化学习</p><h3 id="监督学习"><a href="#监督学习" class="headerlink" title="监督学习"></a>监督学习</h3><p>根据输出是连续还是离散的，把监督学习分为回归问题和分类问题。根据分类个数，还可分为两类分类问题或是多类分类问题。</p><p>监督学习本质上是一种知识的传递。</p><h3 id="非监督学习"><a href="#非监督学习" class="headerlink" title="非监督学习"></a>非监督学习</h3><p>非监督学习的训练数据只有输入而没有分类标签等输出。其目标是根据数据的分布发现数据的规律。例如当前比较热门的生成对抗网络<code>(GAN)</code>。</p><p>常见任务包括<strong>降维</strong>和<strong>聚类</strong>。</p><ul><li>降维的目的是把高维空间的点减低到一个低维空间上，同时尽可能的多保留信息。用途包括使可视化数据，<code>t-SNE</code>是一种很常见的用于可视化数据的降维技术。</li><li>聚类的目的是把相似的数据点放一起。由算法区分类别（标记）。</li></ul><h3 id="强化学习"><a href="#强化学习" class="headerlink" title="强化学习"></a>强化学习</h3><p>获取新知识的唯一途径。（？？）</p><h3 id="常见的监督学习模型"><a href="#常见的监督学习模型" class="headerlink" title="常见的监督学习模型"></a>常见的监督学习模型</h3><h4 id="1-朴素贝叶斯分类器（Naive-Bayes-Classifier）"><a href="#1-朴素贝叶斯分类器（Naive-Bayes-Classifier）" class="headerlink" title="1.朴素贝叶斯分类器（Naive Bayes Classifier）"></a>1.朴素贝叶斯分类器（Naive Bayes Classifier）</h4><p>朴素贝叶斯分类器<code>(Naive Bayes Classifier)</code>非常简单，其假设样本的特征在给定分类的条件下是相互独立的。</p><p>特征<code>(Feature)</code>是被观察现象的一个可以测量的属性。好的特征让学习变的容易，无关的特征会干扰模型。</p><p>假设输入<strong>X</strong> = $(x_1,x_2,…,x_n)$，<code>NBC</code>会计算给定<strong>X</strong>条件下分类是$C_k$的概率$P(C_k|x_1,x_2,…,x_n)$。通过贝叶斯公式，可以得到：</p><script type="math/tex; mode=display">P(C_k|X) =P(C_k|x_1,x_2,...,x_n)=\frac{P(x_1,x_2,...,x_n|C_k)}{P(X)}</script><p>根据条件独立假设，给定了类别$C_k$之后各个特征$x_i$和$x_j$是独立的，因此上式可写为：</p><script type="math/tex; mode=display">\frac{\prod_iP(x_i|C_k)P(C_k)}{P(X)}</script><p>给定<strong>X</strong>，分母$P(X)$是一个固定的用于归一化的常量。（概率加起来等于一），可以忽略它。</p><p>在预测的时候只需知道$P(x_i|C_k)$和$P(C_k)$就可以计算出未归一化的$P(C_k|X)$，因此可以挑选概率最大的$k$作为预测的分类。</p><p>举例：用于垃圾邮件分类。</p><h4 id="2-逻辑回归（Logistic-Regression）"><a href="#2-逻辑回归（Logistic-Regression）" class="headerlink" title="2.逻辑回归（Logistic Regression）"></a>2.逻辑回归（Logistic Regression）</h4><p>逻辑回归是一个用于二值分类问题（binary classification problem）的算法。</p><p>将线性输出域范围的$(-\infty,+\infty)$映射到$(0,1)$区间上。此处须提到重要的$Sigmoid$函数：</p><script type="math/tex; mode=display">\sigma(x) = \frac{1}{1 + e^{-x}} = \frac{e^x}{e^x+1}</script><p>$|x|\rightarrow 0$时，$\sigma(x)$近似线性函数$y = \frac{1}{4}x+\frac{1}{2}$。</p><p>应用举例：图像分类（Y or N），图像在计算机中由三个独立矩阵保存（R、G、B）,$64<em>64$。把像素亮度值提取出来放入一个特征向量（很长，维度 = $64</em>64*3$）</p><p>训练集（Notation）：输入样本<strong>X</strong> = $[x_1,x_2,…,x_n]$，$x_i（i=1,2，…,n）$为<strong>特征</strong>的值。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;机器学习主要分为三类：监督学习、非监督学习、强化学习&lt;/p&gt;
&lt;h3 id=&quot;监督学习&quot;&gt;&lt;a href=&quot;#监督学习&quot; class=&quot;headerlink&quot; title=&quot;监督学习&quot;&gt;&lt;/a&gt;监督学习&lt;/h3&gt;&lt;p&gt;根据输出是连续还是离散的，把监督学习分为回归问题和分类问</summary>
      
    
    
    
    
    <category term="拒绝废物指南" scheme="https://choeruii.github.io/tags/%E6%8B%92%E7%BB%9D%E5%BA%9F%E7%89%A9%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>拖延症小赵的第一篇blog</title>
    <link href="https://choeruii.github.io/2020/10/01/first-piece-of-blog/"/>
    <id>https://choeruii.github.io/2020/10/01/first-piece-of-blog/</id>
    <published>2020-10-01T06:55:07.202Z</published>
    <updated>2020-10-05T15:34:33.721Z</updated>
    
    
    
    
    
    <category term="拒绝废物指南" scheme="https://choeruii.github.io/tags/%E6%8B%92%E7%BB%9D%E5%BA%9F%E7%89%A9%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://choeruii.github.io/2020/10/01/hello-world/"/>
    <id>https://choeruii.github.io/2020/10/01/hello-world/</id>
    <published>2020-10-01T05:27:54.246Z</published>
    <updated>2020-10-01T05:27:54.246Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
